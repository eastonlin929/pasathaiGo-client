{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport QAService from \"../services/QA-service\";\nexport function useGetMessages() {\n  _s();\n  return useQuery([\"messages\"], QAService.getMessages);\n}\n_s(useGetMessages, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport function useGetURLMessage(_id, isId) {\n  _s2();\n  return useQuery({\n    queryKey: [\"readMessages\", _id],\n    queryFn: async () => {\n      const data = await QAService.getURLMessage(_id);\n      return data;\n    },\n    enabled: isId\n  });\n}\n_s2(useGetURLMessage, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport function useGetUserMessages(user_id, isId) {\n  _s3();\n  return useQuery({\n    queryKey: [\"userMessages\", user_id],\n    queryFn: async () => {\n      const data = await QAService.getUserMessages(user_id);\n      return data;\n    },\n    enabled: isId\n  });\n}\n_s3(useGetUserMessages, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","QAService","useGetMessages","_s","getMessages","useGetURLMessage","_id","isId","_s2","queryKey","queryFn","data","getURLMessage","enabled","useGetUserMessages","user_id","_s3","getUserMessages"],"sources":["/Users/linyicheng/Desktop/Desktop/desktopCloud/web-design/作品集練習/react-practice-use/client/src/customHooks/qaApi.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport QAService from \"../services/QA-service\";\n\nexport function useGetMessages() {\n  return useQuery([\"messages\"], QAService.getMessages);\n}\n\nexport function useGetURLMessage(_id, isId) {\n  return useQuery({\n    queryKey: [\"readMessages\", _id],\n    queryFn: async () => {\n      const data = await QAService.getURLMessage(_id);\n      return data;\n    },\n    enabled: isId,\n  });\n}\n\nexport function useGetUserMessages(user_id, isId) {\n  return useQuery({\n    queryKey: [\"userMessages\", user_id],\n    queryFn: async () => {\n      const data = await QAService.getUserMessages(user_id);\n      return data;\n    },\n    enabled: isId,\n  });\n}\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,OAAOH,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAEC,SAAS,CAACG,WAAW,CAAC;AACtD;AAACD,EAAA,CAFeD,cAAc;EAAA,QACrBF,QAAQ;AAAA;AAGjB,OAAO,SAASK,gBAAgBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAAAC,GAAA;EAC1C,OAAOR,QAAQ,CAAC;IACdS,QAAQ,EAAE,CAAC,cAAc,EAAEH,GAAG,CAAC;IAC/BI,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,IAAI,GAAG,MAAMV,SAAS,CAACW,aAAa,CAACN,GAAG,CAAC;MAC/C,OAAOK,IAAI;IACb,CAAC;IACDE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ;AAACC,GAAA,CATeH,gBAAgB;EAAA,QACvBL,QAAQ;AAAA;AAUjB,OAAO,SAASc,kBAAkBA,CAACC,OAAO,EAAER,IAAI,EAAE;EAAAS,GAAA;EAChD,OAAOhB,QAAQ,CAAC;IACdS,QAAQ,EAAE,CAAC,cAAc,EAAEM,OAAO,CAAC;IACnCL,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,IAAI,GAAG,MAAMV,SAAS,CAACgB,eAAe,CAACF,OAAO,CAAC;MACrD,OAAOJ,IAAI;IACb,CAAC;IACDE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ;AAACS,GAAA,CATeF,kBAAkB;EAAA,QACzBd,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}