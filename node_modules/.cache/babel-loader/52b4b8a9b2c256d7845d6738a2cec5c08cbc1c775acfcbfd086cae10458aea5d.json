{"ast":null,"code":"var _jsxFileName = \"/Users/linyicheng/Desktop/desktopCloud/web-design/\\u4F5C\\u54C1\\u96C6\\u7DF4\\u7FD2/react-practice-use/react-practice-use/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Stopwatch() {\n  _s();\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const intervalRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  function handleToggle() {\n    if (isRunning) {\n      clearInterval(intervalRef.current);\n      setStartTime(null);\n      setIsRunning(false);\n    } else {\n      setStartTime(Date.now());\n      setIsRunning(true);\n      clearInterval(intervalRef.current);\n      intervalRef.current = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 10);\n      }, 10);\n    }\n  }\n  function handleReset() {\n    clearInterval(intervalRef.current);\n    setStartTime(null);\n    setElapsedTime(0);\n    setIsRunning(false);\n  }\n  let secondsPassed = elapsedTime / 1000;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Time passed: \", secondsPassed.toFixed(3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: isRunning ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Stopwatch, \"l7FXcHq1Hlw+xhldRazFLf5OgNE=\");\n_c = Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Stopwatch","_s","startTime","setStartTime","elapsedTime","setElapsedTime","intervalRef","isRunning","setIsRunning","handleToggle","clearInterval","current","Date","now","setInterval","prevElapsedTime","handleReset","secondsPassed","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/linyicheng/Desktop/desktopCloud/web-design/作品集練習/react-practice-use/react-practice-use/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nexport default function Stopwatch() {\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const intervalRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n\n  function handleToggle() {\n    if (isRunning) {\n      clearInterval(intervalRef.current);\n      setStartTime(null);\n      setIsRunning(false);\n    } else {\n      setStartTime(Date.now());\n      setIsRunning(true);\n\n      clearInterval(intervalRef.current);\n      intervalRef.current = setInterval(() => {\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 10);\n      }, 10);\n    }\n  }\n\n  function handleReset() {\n    clearInterval(intervalRef.current);\n    setStartTime(null);\n    setElapsedTime(0);\n    setIsRunning(false);\n  }\n\n  let secondsPassed = elapsedTime / 1000;\n\n  return (\n    <>\n      <h1>Time passed: {secondsPassed.toFixed(3)}</h1>\n      <button onClick={handleToggle}>{isRunning ? \"Stop\" : \"Start\"}</button>\n      <button onClick={handleReset}>Reset</button>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMY,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASe,YAAYA,CAAA,EAAG;IACtB,IAAIF,SAAS,EAAE;MACbG,aAAa,CAACJ,WAAW,CAACK,OAAO,CAAC;MAClCR,YAAY,CAAC,IAAI,CAAC;MAClBK,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLL,YAAY,CAACS,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MACxBL,YAAY,CAAC,IAAI,CAAC;MAElBE,aAAa,CAACJ,WAAW,CAACK,OAAO,CAAC;MAClCL,WAAW,CAACK,OAAO,GAAGG,WAAW,CAAC,MAAM;QACtCT,cAAc,CAAEU,eAAe,IAAKA,eAAe,GAAG,EAAE,CAAC;MAC3D,CAAC,EAAE,EAAE,CAAC;IACR;EACF;EAEA,SAASC,WAAWA,CAAA,EAAG;IACrBN,aAAa,CAACJ,WAAW,CAACK,OAAO,CAAC;IAClCR,YAAY,CAAC,IAAI,CAAC;IAClBE,cAAc,CAAC,CAAC,CAAC;IACjBG,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,IAAIS,aAAa,GAAGb,WAAW,GAAG,IAAI;EAEtC,oBACEP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,GAAI,eAAa,EAACD,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChD1B,OAAA;MAAQ2B,OAAO,EAAEf,YAAa;MAAAS,QAAA,EAAEX,SAAS,GAAG,MAAM,GAAG;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACtE1B,OAAA;MAAQ2B,OAAO,EAAER,WAAY;MAAAE,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC5C,CAAC;AAEP;AAACtB,EAAA,CAtCuBD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}