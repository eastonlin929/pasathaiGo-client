{"ast":null,"code":"var _jsxFileName = \"/Users/linyicheng/Desktop/Desktop/desktopCloud/web-design/\\u4F5C\\u54C1\\u96C6\\u7DF4\\u7FD2/react-practice-use/client/src/components/AlphabetSpeaker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport textToSpeech from \"@google-cloud/text-to-speech\"; // 請確保引入正確的套件路徑\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlphabetSpeaker = () => {\n  _s();\n  const [client] = useState(new textToSpeech.TextToSpeechClient());\n  const playLetterSound = async letter => {\n    const inputText = letter;\n    const voice = {\n      languageCode: \"en-US\",\n      ssmlGender: \"NEUTRAL\"\n    };\n    const audioConfig = {\n      audioEncoding: \"MP3\"\n    };\n    try {\n      const [response] = await client.synthesizeSpeech({\n        input: {\n          text: inputText\n        },\n        voice: voice,\n        audioConfig: audioConfig\n      });\n      const audio = new Audio();\n      audio.src = `data:audio/mpeg;base64,${response.audioContent.toString(\"base64\")}`;\n      audio.play();\n    } catch (error) {\n      console.error(\"Error synthesizing speech:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => playLetterSound(\"A\"),\n      children: \"A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => playLetterSound(\"B\"),\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AlphabetSpeaker, \"MhaNsTJ07t3TOAf5Cvn8AS9QzhE=\");\n_c = AlphabetSpeaker;\nexport default AlphabetSpeaker;\nvar _c;\n$RefreshReg$(_c, \"AlphabetSpeaker\");","map":{"version":3,"names":["React","useState","textToSpeech","jsxDEV","_jsxDEV","AlphabetSpeaker","_s","client","TextToSpeechClient","playLetterSound","letter","inputText","voice","languageCode","ssmlGender","audioConfig","audioEncoding","response","synthesizeSpeech","input","text","audio","Audio","src","audioContent","toString","play","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/linyicheng/Desktop/Desktop/desktopCloud/web-design/作品集練習/react-practice-use/client/src/components/AlphabetSpeaker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport textToSpeech from \"@google-cloud/text-to-speech\"; // 請確保引入正確的套件路徑\n\nconst AlphabetSpeaker = () => {\n  const [client] = useState(new textToSpeech.TextToSpeechClient());\n\n  const playLetterSound = async (letter) => {\n    const inputText = letter;\n\n    const voice = {\n      languageCode: \"en-US\",\n      ssmlGender: \"NEUTRAL\",\n    };\n\n    const audioConfig = {\n      audioEncoding: \"MP3\",\n    };\n\n    try {\n      const [response] = await client.synthesizeSpeech({\n        input: { text: inputText },\n        voice: voice,\n        audioConfig: audioConfig,\n      });\n\n      const audio = new Audio();\n      audio.src = `data:audio/mpeg;base64,${response.audioContent.toString(\n        \"base64\"\n      )}`;\n      audio.play();\n    } catch (error) {\n      console.error(\"Error synthesizing speech:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => playLetterSound(\"A\")}>A</button>\n      <button onClick={() => playLetterSound(\"B\")}>B</button>\n      {/* 以此類推，添加其他字母按鈕 */}\n    </div>\n  );\n};\n\nexport default AlphabetSpeaker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,CAAC,GAAGN,QAAQ,CAAC,IAAIC,YAAY,CAACM,kBAAkB,CAAC,CAAC,CAAC;EAEhE,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,MAAMC,SAAS,GAAGD,MAAM;IAExB,MAAME,KAAK,GAAG;MACZC,YAAY,EAAE,OAAO;MACrBC,UAAU,EAAE;IACd,CAAC;IAED,MAAMC,WAAW,GAAG;MAClBC,aAAa,EAAE;IACjB,CAAC;IAED,IAAI;MACF,MAAM,CAACC,QAAQ,CAAC,GAAG,MAAMV,MAAM,CAACW,gBAAgB,CAAC;QAC/CC,KAAK,EAAE;UAAEC,IAAI,EAAET;QAAU,CAAC;QAC1BC,KAAK,EAAEA,KAAK;QACZG,WAAW,EAAEA;MACf,CAAC,CAAC;MAEF,MAAMM,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;MACzBD,KAAK,CAACE,GAAG,GAAI,0BAAyBN,QAAQ,CAACO,YAAY,CAACC,QAAQ,CAClE,QACF,CAAE,EAAC;MACHJ,KAAK,CAACK,IAAI,CAAC,CAAC;IACd,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAAC,GAAG,CAAE;MAAAoB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvD9B,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAAC,GAAG,CAAE;MAAAoB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAvCID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}